trigger:
  branches:
    include:
    - main
  paths:
    exclude:
    - README.md
    - .gitignore
    - images
    
name: Azure Pipeline
variables:
  - group: azsecret
    #vmImageName: 'ubuntu-latest'
stages:
  - stage: Provision
    jobs:
      - job: TerrafromTasks
        displayName: Terraform Tasks
        pool: myagentPool
        steps:
        - task: DownloadSecureFile@1
          displayName: Download azsecret.conf file
          name: azsecret
          inputs:
            secureFile: 'azsecret.config'
        - task: InstallSSHKey@0
          displayName: Install SSH Key
          inputs:
            knownHostsEntry: 'known_hosts'
            sshPublicKey: '$(public_key)'
            sshKeySecureFile: 'az_qa_id_rsa'
        - task: JasonBJohnson.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
          displayName: Install Terraform
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTaskV1@0
          displayName: Terraform Init
          inputs:
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environment/test'
            commandOptions: '-backend-config=$(azsecret.secureFilePath)'
            backendType: 'azurerm'
            backendServiceArm: 'service-connection-tf'
            backendAzureRmResourceGroupName: 'ensuring-qa-release-rg'
            backendAzureRmStorageAccountName: 'tstate12855'
            backendAzureRmContainerName: 'tfstate'
            allowTelemetryCollection: true
          
        - task: TerraformTaskV1@0
          displayName: Terraform Validate
          inputs:
            command: 'validate'
            allowTelemetryCollection: true    
        
        - task: AzureCLI@1
          displayName: Set Environment Variables for Terraform
          inputs:
            azureSubscription: ensuring-qa-release-rg
            scriptLocation: inlineScript
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environment/test'
            addSpnToEnvironment: true
            inlineScript: |
                export ARM_CLIENT_ID=$(client_id)
                export ARM_CLIENT_SECRET=$(client_secret)
                export ARM_SUBSCRIPTION_ID=$(subscription_id)
                export ARM_TENANT_ID=$(tenant_id)
          
        - task: TerraformTaskV1@0
          displayName: 'Terraform Plan'
          inputs:        
              command: 'plan'
              environmentServiceName: 'service-connection-azurerm'
              allowTelemetryCollection: true
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environment/test'
              
        - task: TerraformTaskV1@0
          displayName: Terraform Apply
          inputs:
            command: 'apply'
            environmentServiceName: 'service-connection-azurerm'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environment/test'
            allowTelemetryCollection: true

 
