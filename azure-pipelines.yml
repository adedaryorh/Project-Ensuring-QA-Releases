trigger:
  branches:
    include:
    - main
  paths:
    exclude:
    - README.md
    - .gitignore
    - images/
name: Azure Pipeline
variables:
  - group: azsecret
stages:
  - stage: Provision
    jobs:
      - job: TerrafromTasks
        displayName: Terraform Tasks
        pool: myAgentPool
        steps:
        - task: DownloadSecureFile@1
          displayName: Download azsecret.conf file
          name: azsecret
          inputs:
            secureFile: 'azsecret.conf'
        - task: InstallSSHKey@0
          displayName: Install SSH Key
          inputs:
            knownHostsEntry: 'known_hosts'
            sshPublicKey: '$(public_key)'
            sshKeySecureFile: 'az_qa_id_rsa'
        - task: TerraformInstaller@0
          displayName: Install Terraform
          inputs:
            terraformVersion: 'latest'
        - task: TerraformCLI@0
          displayName: Terraform Init
          inputs:
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
            commandOptions: '-backend-config=$(azsecret.secureFilePath)'
            backendType: 'azurerm'
            backendServiceArm: 'service-connection-azurerm'
            backendAzureRmStorageAccountName: 'tfstate1064'
            backendAzureRmResourceGroupName: 'tfstate'
            backendAzureRmContainerName: 'tfstate'
            allowTelemetryCollection: true
            aiInstrumentationKey: 
        - task: TerraformTaskV4@4
          displayName: Terraform Validate
          inputs:
            provider: 'azurerm'
            command: 'validate'
            workingDirectory: $(System.DefaultWorkingDirectory)/terraform/environments/test'
            allowTelemetryCollection: true 
        
        - task: AzureCLI@1
          displayName: Set Environment Variables for Terraform
          inputs:
            azureSubscription: service-connection-azurerm
            scriptLocation: inlineScript
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
            addSpnToEnvironment: true
            inlineScript: |
                export ARM_CLIENT_ID=$(client_id)
                export ARM_CLIENT_SECRET=$(client_secret)
                export ARM_SUBSCRIPTION_ID=$(subscription_id)
                export ARM_TENANT_ID=$(tenant_id)
        - task: TerraformCLI@0
          displayName: 'Terraform Plan'
          inputs:
            command: 'plan'
            environmentServiceName: 'service-connection-azurerm'
            allowTelemetryCollection: true
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/environments/test'
        - task: TerraformCLI@0
          displayName: Terraform Apply
          inputs:
            command: 'apply'
            environmentServiceName: 'service-connection-azurerm'
            workingDirectory: '$(System.DefaultWorkingDirectory)\terraform'
            allowTelemetryCollection: true